"use strict";(self.webpackChunkrim_tub_docs_release=self.webpackChunkrim_tub_docs_release||[]).push([[1675],{6897:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"2.2.2-1","label":"2.2.2-1","banner":"unmaintained","badge":true,"noIndex":false,"className":"docs-version-2.2.2-1","isLast":false,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/docs/2.2.2-1/intro","docId":"intro","unlisted":false},{"type":"link","label":"Glossary","href":"/docs/2.2.2-1/glossary","docId":"glossary","unlisted":false},{"type":"link","label":"Technical Information","href":"/docs/2.2.2-1/technical_information","docId":"technical_information","unlisted":false},{"type":"link","label":"Module Structure","href":"/docs/2.2.2-1/module_structure","docId":"module_structure","unlisted":false},{"type":"link","label":"Module","href":"/docs/2.2.2-1/module","docId":"module","unlisted":false},{"type":"link","label":"Client","href":"/docs/2.2.2-1/client","docId":"client","unlisted":false},{"type":"link","label":"Command Handlers","href":"/docs/2.2.2-1/commands_handlers","docId":"commands_handlers","unlisted":false},{"type":"link","label":"Other Handlers","href":"/docs/2.2.2-1/other_handlers","docId":"other_handlers","unlisted":false},{"type":"link","label":"@mod.on_ready","href":"/docs/2.2.2-1/mod/on_ready","docId":"mod_on_ready","unlisted":false},{"type":"category","label":"Data Storages","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"SQL Database (db)","href":"/docs/2.2.2-1/storages/db","docId":"storages/db","unlisted":false},{"type":"link","label":"Temporary Storage (st)","href":"/docs/2.2.2-1/storages/st","docId":"storages/st","unlisted":false},{"type":"link","label":"Pickle Storage","href":"/docs/2.2.2-1/storages/pickle","docId":"storages/pickle","unlisted":false}],"href":"/docs/2.2.2-1/category/data-storages"},{"type":"category","label":"Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435","href":"/docs/2.2.2-1/examples/intro","docId":"examples/examples_intro","unlisted":false},{"type":"link","label":"Hello","href":"/docs/2.2.2-1/examples/hello","docId":"examples/examples_hello","unlisted":false},{"type":"link","label":"Buttons","href":"/docs/2.2.2-1/examples/buttons","docId":"examples/examples_buttons","unlisted":false}],"href":"/docs/2.2.2-1/category/examples"},{"type":"link","label":"Buttons","href":"/docs/2.2.2-1/buttons","docId":"buttons","unlisted":false},{"type":"link","label":"Logging","href":"/docs/2.2.2-1/logging","docId":"logging","unlisted":false},{"type":"link","label":"Working with Files","href":"/docs/2.2.2-1/working_with_files","docId":"working_with_files","unlisted":false},{"type":"link","label":"Getting a Response","href":"/docs/2.2.2-1/get_answer","docId":"get_answer","unlisted":false},{"type":"link","label":"HelpList","href":"/docs/2.2.2-1/helplist","docId":"helplist","unlisted":false},{"type":"link","label":"Formatting","href":"/docs/2.2.2-1/formatting","docId":"formatting","unlisted":false},{"type":"link","label":"Filters","href":"/docs/2.2.2-1/filters","docId":"filters","unlisted":false},{"type":"link","label":"Connected Bot","href":"/docs/2.2.2-1/connected_bot","docId":"connected_bot","unlisted":false},{"type":"link","label":"Multiclient","href":"/docs/2.2.2-1/multiclient","docId":"multiclient","unlisted":false},{"type":"link","label":"Common Errors","href":"/docs/2.2.2-1/errors","docId":"errors","unlisted":false},{"type":"link","label":"utils","href":"/docs/2.2.2-1/utils","docId":"utils","unlisted":false},{"type":"link","label":"config.yaml","href":"/docs/2.2.2-1/config","docId":"config","unlisted":false}]},"docs":{"buttons":{"id":"buttons","title":"Buttons","description":"RimTUB 2.2 provides convenient tools for working with buttons, unlike previous versions of yub.","sidebar":"tutorialSidebar"},"client":{"id":"client","title":"Client","description":"Custom Pyrogram client. This object is passed to the main function of the module.","sidebar":"tutorialSidebar"},"commands_handlers":{"id":"commands_handlers","title":"Command Handlers","description":"Here you will learn how to create command handlers!","sidebar":"tutorialSidebar"},"config":{"id":"config","title":"config.yaml","description":"\ud83d\udee0 How to Use Parameters","sidebar":"tutorialSidebar"},"connected_bot":{"id":"connected_bot","title":"Connected Bot","description":"RimTUB includes a connected bot. The system uses it to create buttons. However, nothing prevents you from adding more functionality to it. Access to the bot is available via app.bot. The bot\'s username can be retrieved using app.bot_username.","sidebar":"tutorialSidebar"},"errors":{"id":"errors","title":"Common Errors","description":"General","sidebar":"tutorialSidebar"},"examples/examples_buttons":{"id":"examples/examples_buttons","title":"Buttons","description":"\u041c\u043e\u0434\u0443\u043b\u044c \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043a\u0430\u043a \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u043a\u043d\u043e\u043f\u043a\u0430\u043c\u0438 \u0432 RimTUB 2.2","sidebar":"tutorialSidebar"},"examples/examples_hello":{"id":"examples/examples_hello","title":"Hello","description":"\u041c\u043e\u0434\u0443\u043b\u044c \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u0440\u0435\u0430\u0433\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 .hello \u0438 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u043d\u0430 \\"\u041f\u0420\u0418\u0412\u0415\u0415\u0415\u0422!!!\\"","sidebar":"tutorialSidebar"},"examples/examples_intro":{"id":"examples/examples_intro","title":"\u0412\u0432\u0435\u0434\u0435\u043d\u0438\u0435","description":"\u0412 \u044d\u0442\u043e\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u0442\u044b \u043c\u043e\u0436\u0435\u0448\u044c \u043d\u0430\u0439\u0442\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u043c\u043e\u0434\u0443\u043b\u0435\u0439. \\\\","sidebar":"tutorialSidebar"},"filters":{"id":"filters","title":"Filters","description":"Filters in RimTUB work exactly the same as in the original Kurigram. Kurigram documentation is available here.","sidebar":"tutorialSidebar"},"formatting":{"id":"formatting","title":"Formatting","description":"RimTUB uses HTML markup for formatting messages.","sidebar":"tutorialSidebar"},"get_answer":{"id":"get_answer","title":"Getting a Response","description":"To get responses (a.k.a. FSM) in RimTUB, Pyromod is used.","sidebar":"tutorialSidebar"},"glossary":{"id":"glossary","title":"Glossary","description":"**A glossary** is a list of terms with brief definitions, used to explain specific concepts in a particular field of knowledge. It helps readers quickly navigate professional, scientific, or technical information by providing a unified understanding of key terms. Glossaries are often found in books, documentation, educational materials, and dictionaries.","sidebar":"tutorialSidebar"},"helplist":{"id":"helplist","title":"HelpList","description":"HelpList is a structure containing information about commands, features, and other details about a module. It includes descriptions of each module, feature, or command, their arguments, usage examples, and explanations. This tool helps users navigate the commands and features of a module and use its functionality correctly.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Developers can create their own modules for RimTUB. This section contains all the necessary information.","sidebar":"tutorialSidebar"},"logging":{"id":"logging","title":"Logging","description":"RimTUB uses Python\'s built-in logging module for logging.","sidebar":"tutorialSidebar"},"mod_on_ready":{"id":"mod_on_ready","title":"@mod.on_ready","description":"@mod.on_ready - This is a decorator that triggers when the bot starts. You can use it, for example, to launch workers.","sidebar":"tutorialSidebar"},"module":{"id":"module","title":"Module","description":"The module object is passed to the main function of the module.","sidebar":"tutorialSidebar"},"module_structure":{"id":"module_structure","title":"Module Structure","description":"A module in the project is a folder with Python files in the plugins directory.","sidebar":"tutorialSidebar"},"multiclient":{"id":"multiclient","title":"Multiclient","description":"One of the main advantages of RimTUB is its support for multi-account (multiclient) functionality. This means that a single UB can work with multiple Telegram accounts simultaneously.","sidebar":"tutorialSidebar"},"other_handlers":{"id":"other_handlers","title":"Other Handlers","description":"In addition to command handlers, you also need to know how to create your own handlers.","sidebar":"tutorialSidebar"},"storages/db":{"id":"storages/db","title":"SQL Database (db)","description":"The primary, persistent storage. SQLite database is used.","sidebar":"tutorialSidebar"},"storages/pickle":{"id":"storages/pickle","title":"Pickle Storage","description":"In addition to permanent and temporary storage, there is also short-term storage. Data can be stored here for 3-7 days. All data is stored in Pickle file format, meaning almost any Python object can be stored.","sidebar":"tutorialSidebar"},"storages/st":{"id":"storages/st","title":"Temporary Storage (st)","description":"Temporary storage is used for temporarily storing data. All data is stored in RAM and is not preserved after restarting the system.","sidebar":"tutorialSidebar"},"technical_information":{"id":"technical_information","title":"Technical Information","description":"RimTUB uses Kurigram (a Pyrogram fork by @KurimuzonAkuma) as its main interface with Telegram MTProto and the Bot API. Alongside Pyrogram, it uses pyromod to extend functionality.","sidebar":"tutorialSidebar"},"utils":{"id":"utils","title":"utils","description":"get_root","sidebar":"tutorialSidebar"},"working_with_files":{"id":"working_with_files","title":"Working with Files","description":"As mentioned earlier,","sidebar":"tutorialSidebar"}}}}')}}]);