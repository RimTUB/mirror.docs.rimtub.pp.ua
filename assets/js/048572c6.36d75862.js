"use strict";(self.webpackChunkrim_tub_docs_release=self.webpackChunkrim_tub_docs_release||[]).push([[1426],{5537:(e,n,t)=>{t.d(n,{A:()=>w});var s=t(6540),a=t(4164),r=t(5627),i=t(6347),l=t(372),o=t(604),c=t(1861),d=t(8749);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,s.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:s,default:a}}=e;return{value:n,label:t,attributes:s,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(r),(0,s.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=h(e),[i,o]=(0,s.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const s=t.find((e=>e.default))??t[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:n,tabValues:r}))),[c,u]=x({queryString:t,groupId:a}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,d.Dv)(t);return[a,(0,s.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),g=(()=>{const e=c??m;return p({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{g&&o(g)}),[g]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),b(e)}),[u,b,r]),tabValues:r}}var b=t(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function f(e){let{className:n,block:t,selectedValue:s,selectValue:i,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),a=l[t].value;a!==s&&(c(n),i(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:s===n?0:-1,"aria-selected":s===n,ref:e=>{o.push(e)},onKeyDown:u,onClick:d,...r,className:(0,a.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":s===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function v(e){const n=m(e);return(0,j.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,j.jsx)(f,{...n,...e}),(0,j.jsx)(y,{...n,...e})]})}function w(e){const n=(0,b.A)();return(0,j.jsx)(v,{...e,children:u(e.children)},String(n))}},5650:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"buttons","title":"Buttons","description":"RimTUB 2.2 provides convenient tools for working with buttons, unlike previous versions of yub.","source":"@site/docs/12_buttons.md","sourceDirName":".","slug":"/buttons","permalink":"/docs/buttons","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":12,"frontMatter":{"title":"Buttons","sidebar_position":12,"slug":"buttons","id":"buttons"},"sidebar":"tutorialSidebar","previous":{"title":"Buttons","permalink":"/docs/examples/buttons"},"next":{"title":"Logging","permalink":"/docs/logging"}}');var a=t(4848),r=t(8453);t(5537),t(9329);const i={title:"Buttons",sidebar_position:12,slug:"buttons",id:"buttons"},l="Buttons",o={},c=[{value:"Data Types",id:"data-types",level:2},{value:"class <code>Buttons</code>",id:"class-buttons",level:3},{value:"class <code>Button</code>",id:"class-button",level:3},{value:"Sending Buttons",id:"sending-buttons",level:2},{value:"Handling Button Clicks",id:"handling-button-clicks",level:2},{value:"Passing Data",id:"passing-data",level:2},{value:"Extra Data",id:"extra-data",level:3},{value:"Using <code>callback_data</code>",id:"using-callback_data",level:3},{value:"Modifying Messages and Buttons",id:"modifying-messages-and-buttons",level:2},{value:"Modifying Message Text",id:"modifying-message-text",level:3},{value:"Modifying Buttons",id:"modifying-buttons",level:3},{value:"Private Buttons",id:"private-buttons",level:2},{value:"Examples",id:"examples",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"buttons",children:"Buttons"})}),"\n",(0,a.jsxs)(n.p,{children:["RimTUB 2.2 provides ",(0,a.jsx)(n.strong,{children:"convenient"})," tools for working with buttons, unlike previous versions of yub."]}),"\n",(0,a.jsx)(n.p,{children:"Telegram personal accounts cannot create buttons, so a linked bot and inline mode are used for their creation."}),"\n",(0,a.jsx)(n.hr,{}),"\n","\n",(0,a.jsx)(n.h2,{id:"data-types",children:"Data Types"}),"\n",(0,a.jsxs)(n.h3,{id:"class-buttons",children:["class ",(0,a.jsx)(n.code,{children:"Buttons"})]}),"\n",(0,a.jsx)(n.p,{children:"Creates a set of inline buttons."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"inline_keyboard"})," (",(0,a.jsx)(n.em,{children:"list[Button]"}),") - A list of button rows, where each row is a list of ",(0,a.jsx)(n.code,{children:"Button"})," objects."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"general_extra_data"})," (",(0,a.jsx)(n.em,{children:"dict"}),", optional) = ",(0,a.jsx)(n.em,{children:"None"})," - Additional data applied to all buttons."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"buttons = Buttons([\r\n    [ # first row of buttons\r\n        Button('Hello', callback_data='hello'), # first button in the row\r\n        Button('Copy', copy_text='copied!') # second button in the row\r\n    ],\r\n    [ # second row of buttons\r\n        Button('Link', url='https://example.com') # first button in the row\r\n    ]\r\n])\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://i.imgur.com/2UJUnUo.png",alt:"How buttons look in TG"})}),"\n",(0,a.jsxs)(n.h3,{id:"class-button",children:["class ",(0,a.jsx)(n.code,{children:"Button"})]}),"\n",(0,a.jsx)(n.p,{children:"Creates an individual inline button with various parameters."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"text"})," (",(0,a.jsx)(n.em,{children:"str"}),") - The button text."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"callback_data"})," (",(0,a.jsx)(n.em,{children:"str"}),", optional) - Callback identifier for handling clicks."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"url"})," (",(0,a.jsx)(n.em,{children:"str"}),", optional) - A URL opened when the button is clicked."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"copy_text"})," (",(0,a.jsx)(n.em,{children:"str"}),", optional) - Text copied when the button is clicked."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"extra_data"})," (",(0,a.jsx)(n.em,{children:"dict"}),", optional) - Additional data passed to the ",(0,a.jsx)(n.code,{children:"@mod.callback"})," handler."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"button = Button('Click me', callback_data='click')\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"sending-buttons",children:"Sending Buttons"}),"\n",(0,a.jsxs)(n.p,{children:["Buttons should be sent using the ",(0,a.jsx)(n.code,{children:"send_buttons"})," method. Read more ",(0,a.jsx)(n.a,{href:"/docs/module#async-send_buttons",children:"here"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:'await mod.send_buttons(\r\n    msg.chat.id,\r\n    "Here are your buttons!",\r\n    buttons,\r\n    message_thread_id=msg.message_thread_id\r\n)\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"handling-button-clicks",children:"Handling Button Clicks"}),"\n",(0,a.jsxs)(n.p,{children:["To handle button clicks, specify ",(0,a.jsx)(n.code,{children:"callback_data"})," in the button. This callback can be tracked using the ",(0,a.jsx)(n.code,{children:"@mod.callback"})," decorator."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"@mod.callback('hello')\r\nasync def _hello(c: C):\r\n    await c.answer(\"Hello!\", True)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Read more about this decorator ",(0,a.jsx)(n.a,{href:"/docs/module#callback",children:"here"}),"."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"passing-data",children:"Passing Data"}),"\n",(0,a.jsx)(n.p,{children:"Often, you need to pass some data through buttons. There are two ways to do this, each with its pros and cons."}),"\n",(0,a.jsx)(n.h3,{id:"extra-data",children:"Extra Data"}),"\n",(0,a.jsxs)(n.p,{children:["Buttons with ",(0,a.jsx)(n.code,{children:"callback_data"})," support an additional ",(0,a.jsx)(n.code,{children:"extra_data"})," field, where arbitrary data in ",(0,a.jsx)(n.code,{children:"dict"})," format can be passed. This data is available ",(0,a.jsx)(n.strong,{children:"only"})," to the handler and is not displayed in ",(0,a.jsx)(n.code,{children:"callback_data"}),". It is serialized using ",(0,a.jsx)(n.code,{children:"pickle"})," and stored for 3 days, after which it is automatically deleted. The lifetime can be changed in the configuration via the ",(0,a.jsx)(n.code,{children:"DEFAULT_STORAGE_FILES_TTL"})," parameter."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Can store any Python objects."}),"\n",(0,a.jsx)(n.li,{children:"No size limitations."}),"\n",(0,a.jsxs)(n.li,{children:["Data is not visible in ",(0,a.jsx)(n.code,{children:"callback_data"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Easily accessible in the handler."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Takes up disk space."}),"\n",(0,a.jsx)(n.li,{children:"Harder to debug."}),"\n",(0,a.jsx)(n.li,{children:"Data is stored for a limited time."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"buttons = Buttons([\r\n    [\r\n        Button(\r\n            'Private button with a secret',\r\n            callback_data='private',\r\n            # highlight-next-line\r\n            extra_data={'secret': 8}\r\n        )\r\n    ]\r\n])\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"@mod.callback('private')\r\nasync def _private(c: C):\r\n    if c.from_user.id != app.me.id: # make the button private, only for yourself\r\n        return await c.answer(\"This is not your button!\", True)\r\n    # highlight-next-line\r\n    secret = c.extra_data.get('secret')\r\n    await c.answer(f\"Your secret: {secret}\")\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"using-callback_data",children:["Using ",(0,a.jsx)(n.code,{children:"callback_data"})]}),"\n",(0,a.jsxs)(n.p,{children:["You can also pass data through ",(0,a.jsx)(n.code,{children:"callback_data"}),". Simply embed it directly into the callback text, separating it with a colon (",(0,a.jsx)(n.code,{children:":"}),"), for example."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Pros"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Data is stored indefinitely."}),"\n",(0,a.jsx)(n.li,{children:"Easy to debug."}),"\n",(0,a.jsx)(n.li,{children:"Convenient for passing small data, such as IDs."}),"\n",(0,a.jsx)(n.li,{children:"Does not clutter memory."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Cons"}),":"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Only strings can be passed."}),"\n",(0,a.jsxs)(n.li,{children:["Strong length limitation. (The maximum length of the entire callback data is calculated using the formula ",(0,a.jsx)(n.code,{children:"64-(module name length)-12"})," characters)."]}),"\n",(0,a.jsx)(n.li,{children:"Data is visible to others."}),"\n",(0,a.jsx)(n.li,{children:"You will need to extract this data yourself."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"# highlight-next-line\r\nmy_id = 1234567890\r\nbuttons = Buttons([\r\n    [\r\n        Button(\r\n            'Pass ID in callback data',\r\n            # highlight-next-line\r\n            callback_data=f'id:{my_id}',\r\n        )\r\n    ]\r\n])\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"# Check the start of the callback data\r\n@mod.callback(startswith='id') \r\nasync def _id(c: C):\r\n    # highlight-next-line\r\n    my_id = int(c.data.split(':')[-1])\r\n\r\n    await c.answer(f\"Your ID: {my_id}\")\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"modifying-messages-and-buttons",children:"Modifying Messages and Buttons"}),"\n",(0,a.jsx)(n.h3,{id:"modifying-message-text",children:"Modifying Message Text"}),"\n",(0,a.jsx)(n.p,{children:"A message can be modified without sending a new one by replacing its content and buttons."}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Telegram quirk: When modifying text, you must resend the buttons, or they will disappear."})}),"\n",(0,a.jsxs)(n.p,{children:["Text modification is done using standard Kurigram methods, but you need to prepare the buttons first using the ",(0,a.jsx)(n.code,{children:"prepare_buttons"})," method. Read more about the method ",(0,a.jsx)(n.a,{href:"/docs/module#async-prepare_buttons",children:"here"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"buttons = await mod.prepare_buttons(buttons)\r\nawait c.edit_message_text(new_text, reply_markup=buttons)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"modifying-buttons",children:"Modifying Buttons"}),"\n",(0,a.jsx)(n.p,{children:"You can modify not only the message text but also the buttons themselves."}),"\n",(0,a.jsxs)(n.p,{children:["Button modification is done using standard Kurigram methods, but you need to prepare the buttons first using the ",(0,a.jsx)(n.code,{children:"prepare_buttons"})," method. Read more about the method ",(0,a.jsx)(n.a,{href:"/docs/module#async-prepare_buttons",children:"here"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",children:"new_buttons = await mod.prepare_buttons(new_buttons)\r\nawait c.edit_message_reply_markup(new_buttons)\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"private-buttons",children:"Private Buttons"}),"\n",(0,a.jsx)(n.p,{children:"Sometimes you need to make a button private so that no one else can press it."}),"\n",(0,a.jsx)(n.p,{children:"This is implemented with a simple ID check."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-py",metastring:"showLineNumbers",children:"@mod.callback('private')\r\nasync def _private(c: C):\r\n    # highlight-next-line\r\n    if c.from_user.id != app.me.id: # check if the client's ID matches the ID of the person pressing the button\r\n        return await c.answer(\"This is not your button!\", True)\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"/docs/examples/buttons",children:"Examples > Buttons"})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var s=t(6540);const a={},r=s.createContext(a);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},9329:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var s=t(4164);const a={tabItem:"tabItem_Ymn6"};var r=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(a.tabItem,i),hidden:t,children:n})}}}]);