"use strict";(self.webpackChunkrim_tub_docs_release=self.webpackChunkrim_tub_docs_release||[]).push([[3918],{2702:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"commands_handlers","title":"Command Handlers","description":"Here you will learn how to create command handlers!","source":"@site/docs/07_commands_handlers.md","sourceDirName":".","slug":"/commands_handlers","permalink":"/docs/commands_handlers","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"Command Handlers","sidebar_position":7,"slug":"commands_handlers","id":"commands_handlers"},"sidebar":"tutorialSidebar","previous":{"title":"Client","permalink":"/docs/client"},"next":{"title":"Other Handlers","permalink":"/docs/other_handlers"}}');var t=r(4848),o=r(8453);const d={title:"Command Handlers",sidebar_position:7,slug:"commands_handlers",id:"commands_handlers"},i="Command Handlers",l={},a=[{value:"Example",id:"example",level:2},{value:"Error Handling",id:"error-handling",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"command-handlers",children:"Command Handlers"})}),"\n",(0,t.jsx)(n.p,{children:"Here you will learn how to create command handlers!"}),"\n",(0,t.jsxs)(n.p,{children:["To create a handler, you will need the ",(0,t.jsxs)(n.a,{href:"/docs/module#cmd",children:["object ",(0,t.jsx)(n.code,{children:"cmd"})," which can be obtained from the module object"]}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"cmd"})," is a decorator."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"commands"})," (",(0,t.jsx)(n.em,{children:"str|List[str]"}),") - the command(s) to respond to."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",metastring:'title="Module/__init__.py" showLineNumbers',children:"from utils import *\r\n\r\nasync def main(app: Client, mod: Module):\r\n\r\n    # highlight-next-line\r\n    cmd = mod.cmd\r\n\r\n    # highlight-next-line\r\n    @cmd(['cmd', 'my_command'])\r\n    async def _cmd(_, msg: M):\r\n        pass\r\n\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.strong,{children:"ONLY"})," ",(0,t.jsx)(n.code,{children:"mod.cmd"})," for registering commands! It is strongly ",(0,t.jsx)(n.strong,{children:"not"})," recommended to use custom handlers!"]})}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.p,{children:"Command functions (and other handlers) must be unique."}),(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Name handler functions starting with ",(0,t.jsx)(n.code,{children:"_"}),". For example, ",(0,t.jsx)(n.code,{children:"_my_command"})," or ",(0,t.jsx)(n.code,{children:"_hello"}),"."]})})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsxs)(n.p,{children:["When using ",(0,t.jsx)(n.code,{children:"mod.cmd"}),", errors will automatically be logged to the console."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",metastring:'title="Example Output"',children:"18-11-2024 21:31:41 RimTUB [0] ERROR: Error in command test (module TestModule):\r\nTraceback (most recent call last):\r\n  File \"/plugins/TestModule/__init__.py\", line 10, in\r\nraise ModuleError('test error')\r\nModuleError: test error\n"})}),"\n",(0,t.jsx)(n.p,{children:"However, if you want errors to be displayed to the user, you should handle them manually:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",metastring:'title="Module/__init__.py" showLineNumbers',children:"from utils import *\r\n# highlight-next-line\r\nfrom traceback import format_exc\r\n\r\nasync def main(app: Client, mod: Module):\r\n\r\n    cmd = mod.cmd\r\n\r\n    @cmd('test')\r\n    async def _test(_, msg: M):\r\n    # highlight-next-line\r\n        try:\r\n            raise ModuleError('test error')\r\n        # highlight-start\r\n        except:\r\n            # log the traceback to the console\r\n            mod.logger.error('Oops! An error occurred!', exc_info=True)\r\n            # display it to the user by uploading it to pastes.dev\r\n            await msg.edit(f\"Error! {await paste(format_exc())}\")\r\n        # highlight-end\r\n\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>i});var s=r(6540);const t={},o=s.createContext(t);function d(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);