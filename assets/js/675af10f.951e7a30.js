"use strict";(self.webpackChunkrim_tub_docs_release=self.webpackChunkrim_tub_docs_release||[]).push([[5377],{1961:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"get_answer","title":"Getting a Response","description":"To get responses (a.k.a. FSM) in RimTUB, Pyromod is used.","source":"@site/versioned_docs/version-2.2.2-1/15_FSM.md","sourceDirName":".","slug":"/get_answer","permalink":"/docs/2.2.2-1/get_answer","draft":false,"unlisted":false,"tags":[],"version":"2.2.2-1","sidebarPosition":15,"frontMatter":{"title":"Getting a Response","sidebar_position":15,"slug":"get_answer","id":"get_answer"},"sidebar":"tutorialSidebar","previous":{"title":"Working with Files","permalink":"/docs/2.2.2-1/working_with_files"},"next":{"title":"HelpList","permalink":"/docs/2.2.2-1/helplist"}}');var r=n(4848),i=n(8453);const o={title:"Getting a Response",sidebar_position:15,slug:"get_answer",id:"get_answer"},a="Getting a Response",d={},c=[{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-a-response",children:"Getting a Response"})}),"\n",(0,r.jsx)(t.p,{children:"To get responses (a.k.a. FSM) in RimTUB, Pyromod is used."}),"\n",(0,r.jsxs)(t.p,{children:["You can find the Pyromod documentation ",(0,r.jsx)(t.a,{href:"https://pyromod.pauxis.dev",children:"here"}),"."]}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-py",children:'from utils import *\r\nfrom pyromod.exceptions import ListenerTimeout\r\n\r\n\r\nasync def main(app: Client, mod: Module):\r\n\r\n    cmd = mod.cmd\r\n\r\n    @cmd("testask")\r\n    async def _testask(_, msg: M):\r\n        chat_id = "@umemes_bot"\r\n\r\n        try:\r\n            # highlight-next-line\r\n            answer = await app.ask(chat_id=chat_id, text="/start", timeout=1)\r\n        except ListenerTimeout:\r\n            return await msg.edit(f"{chat_id} did not respond!")\r\n\r\n        await msg.edit("The bot responded:\\n" + bq(answer.text.html, False))\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);